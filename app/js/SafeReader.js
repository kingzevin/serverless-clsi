//@ sourceMappingURL=SafeReader.map
// Generated by CoffeeScript 1.6.0
(function() {
  var SafeReader, fs, logger,
    __slice = [].slice;

  fs = require("fs");

  logger = require("logger-sharelatex");

  module.exports = SafeReader = {
    readFile: function(file, size, encoding, callback) {
      if (callback == null) {
        callback = function(error, result) {};
      }
      return fs.open(file, 'r', function(err, fd) {
        var buff, callbackWithClose;
        if ((err != null) && err.code === 'ENOENT') {
          return callback();
        }
        if (err != null) {
          return callback(err);
        }
        callbackWithClose = function() {
          var err, result;
          err = arguments[0], result = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
          return fs.close(fd, function(err1) {
            if (err != null) {
              return callback(err);
            }
            if (err1 != null) {
              return callback(err1);
            }
            return callback.apply(null, [null].concat(__slice.call(result)));
          });
        };
        buff = new Buffer(size, 0);
        return fs.read(fd, buff, 0, buff.length, 0, function(err, bytesRead, buffer) {
          var result;
          if (err != null) {
            return callbackWithClose(err);
          }
          result = buffer.toString(encoding, 0, bytesRead);
          return callbackWithClose(null, result, bytesRead);
        });
      });
    }
  };

}).call(this);
